os:
  - linux
  - osx

language: node_js
node_js:
  - v8
  - v10
  - v12

branches:
  # Whitelist
  only:
    - develop
    - master
    - /release/.*/
    - /hotfix/.*/
    - ci/travis

before_script: export PATH="$(yarn global bin):$PATH"

script:
  - ./build.sh --build --test
  - bash <(curl -s https://codecov.io/bash) -e TRAVIS_NODE_VERSION

cache: yarn

jobs:
  include:
    - stage: release
      if: branch = master
      node_js: v10
      before_install:
        # Decrypt the git_gpg_keys.asc.enc key into /tmp/git_gpg_keys.asc
        - openssl aes-256-cbc -K $encrypted_1645300b04d0_key -iv $encrypted_1645300b04d0_iv -in git_gpg_keys.asc.enc -out /tmp/git_gpg_keys.asc -d
        # Make sure only the current user can read the keys
        - chmod 600 /tmp/git_gpg_keys.asc
        # Import the gpg key
        - gpg --batch --yes --import /tmp/git_gpg_keys.asc
        # Create a script that pass the passphrase to the gpg CLI called by git
        - echo '/usr/bin/gpg2 --passphrase ${GPG_PASSPHRASE} --batch --no-tty "$@"' > /tmp/gpg-with-passphrase && chmod +x /tmp/gpg-with-passphrase
        # Configure git to use the script that passes the passphrase
        - git config gpg.program "/tmp/gpg-with-passphrase"
        # Configure git to sign the commits and tags
        - git config commit.gpgsign true
        # Configure git to use your GPG key
        - git config --global user.signingkey ${GPG_KEY_ID}
      script: skip
      deploy:
        provider: script
        skip_cleanup: true
        script:
          - yarn semantic-release --ci
